services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "uGPRISlXZ7rBkB3PahjU"
      MINIO_ROOT_PASSWORD: "lzBdlQOBsAREMnmBD0LaUOm6NUTZO5i5awjf6Bkw"
    command: server --console-address ":9001" /data
    volumes:
      - minio_data:/data

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "pin_sphere"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data

  app:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - minio
    environment:
      DATABASE_DSN: "postgresql+asyncpg://postgres:postgres@postgres:5432/pin_sphere"
      REDIS_DSN: "redis://redis:6379/0"
      ALGORITHM: "HS256"
      AUTH_SECRET: "159cdf30c1cee803eec9dc63bb16c1b2882c4354aa2eb6a34a46ed50775d94ad"
      AWS_STORAGE_BUCKET_NAME: "pinsphere"
      AWS_REGION: "us-east-1"
      AWS_SECRET_ACCESS_KEY: "minio"
      AWS_ACCESS_KEY_ID: "minio"
      AWS_SESSION_TOKEN: "saurabh_prod"
      AWS_SIGNATURE_VERSION: "s3v4"
      AWS_ENDPOINT_URL: "http://minio:9000"

volumes:
  minio_data:
  postgres_data:
  redis_data:
